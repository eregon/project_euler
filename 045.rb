=begin
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
Triangle   T_(n)=n(n+1)/2   1, 3, 6, 10, 15, ...
Pentagonal P_(n)=n(3n−1)/2  1, 5, 12, 22, 35, ...
Hexagonal  H_(n)=n(2n−1)    1, 6, 15, 28, 45, ...

It can be verified that T_(285) = P_(165) = H_(143) = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
=end


class NumberSet
  attr_reader :last
  def initialize(&block)
    @formula = block
    @i = 0
    find_next
  end

  def find_next
    @last = @formula[@i += 1]
  end
end

triangle = NumberSet.new { |n| (n*n + n)/2 } # n*(n+1)/2 }
pentagonal = NumberSet.new { |n| (3*n*n-n)/2 } # n*(3*n-1)/2 }
hexagonal = NumberSet.new { |n| 2*n*n - n } # n*(2*n-1) }
sets = [triangle, pentagonal, hexagonal]

# too slow in Ruby, I had to do in C
p (1_533_000_000..10_000_000_000).find { |n|
  sets.each { |nset|
    nset.find_next until nset.last >= n
  }
  sets.all? { |nset| nset.last == n }
} # => 1_533_776_805

