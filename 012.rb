=begin
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7^(th) triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
=end

# def calc_divisors(n) # n > 1
#   divisors = 2 # 1, n
#   2.upto(Math.sqrt(n).to_i) { |d|
#     if (n%d).zero?
#       divisors += 2
#       # I don't care of the case when it's the root actually
#     end
#   }
#   divisors
# end # 10.5s

=begin
def calc_divisors(n) # n > 1
  (1..Math.sqrt(n).to_i).count { |d|
    (n%d).zero?
  } * 2
end # 11.1s

i = n = 0
p loop {
  n += (i += 1)
  break(n) if calc_divisors(n) > 500
} # => 76576500
=end

i = n = 0
p loop {
  n += (i += 1)
  break(n) if (1..Math.sqrt(n).to_i).count { |d| (n%d).zero? } > 250
  # Wow, removing the #to_i here ^ makes it almost 2 times slower(19s) :O
} # 11.1s


